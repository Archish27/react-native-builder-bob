name: Comment diffs
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/comment-diffs.yml'
      - 'packages/create-react-native-library/**'
      - '!**.md'

jobs:
  comment-diffs:
    strategy:
          fail-fast: false
          matrix:
            type:
              - module-legacy
              # - module-mixed
              # - module-new
              - view-legacy
              # - view-mixed
              # - view-new
            language:
              - java-objc
              # - java-swift
              # - kotlin-objc
              # - kotlin-swift
            # exclude:
            #   - type: module-new
            #     language: java-swift
            #   - type: module-new
            #     language: kotlin-swift
            #   - type: module-mixed
            #     language: java-swift
            #   - type: module-mixed
            #     language: kotlin-swift
            #   - type: view-new
            #     language: java-swift
            #   - type: view-new
            #     language: kotlin-swift
            #   - type: view-mixed
            #     language: java-swift
            #   - type: view-mixed
            #     language: kotlin-swift

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.type }}-${{ matrix.language }}
      cancel-in-progress: true

    # TODO: use ubuntu once CLI is fixed
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup
      
      - name: Build crnl
        run: |
          yarn workspace create-react-native-library prepare
      
      - name: Create library
        run: |
          ./packages/create-react-native-library/bin/create-react-native-library new-version \
            --slug @bob/react-native-test \
            --description test \
            --author-name test \
            --author-email test@test \
            --author-url https://test.test \
            --repo-url https://test.test \
            --type ${{ matrix.type }} \
            --languages ${{ matrix.language }} \
            --no-example \
            --no-local
      
      - name: Fetch main
        run: git fetch origin main
      
      - name: Checkout main
        run: git checkout origin/main
      
      # Removed this step for the sake of testing
      # - name: Setup again # Add a check here to setup again if deps changed
      #   uses: ./.github/actions/setup
      
      - name: Remove old build and build again
        run: |
          rm -rf ./packages/create-react-native-library/lib
          yarn workspace create-react-native-library prepare
      
      - name: Create library again
        run: |
          ./packages/create-react-native-library/bin/create-react-native-library old-version \
            --slug @bob/react-native-test \
            --description test \
            --author-name test \
            --author-email test@test \
            --author-url https://test.test \
            --repo-url https://test.test \
            --type ${{ matrix.type }} \
            --languages ${{ matrix.language }} \
            --no-example \
            --no-local

      - name: Set Diff view branch prefix env
        run: |
          BRANCH_PREFIX="${{ github.event.number }}-${{ matrix.type }}-${{ matrix.language }}"
          echo "OLD_VERSION_BRANCH=$BRANCH_PREFIX-old-version" >> $GITHUB_ENV
          echo "NEW_VERSION_BRANCH=$BRANCH_PREFIX-new-version" >> $GITHUB_ENV

      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_DEPLOY_KEY }}

      - name: Create the Differ repo
        run: |
          echo ${{ vars.DIFF_VIEW_SSH }}
          mkdir differ
          cd differ
          git init
          git remote add origin ${{ vars.DIFF_VIEW_SSH }}
          desired_branch="${{ env.NEW_VERSION_BRANCH }}"
          # Check if the branch exists on the remote repository
          if git ls-remote --heads origin "$desired_branch" | grep -q "$desired_branch"; then
            echo "The branch $desired_branch already exists on the remote repository."
            git fetch origin "$desired_branch"  # Fetch the branch from the remote
            git checkout "$desired_branch"     # Switch to the existing branch
          else
            echo "The branch $desired_branch does not exist on the remote repository."
            git checkout -b "$desired_branch"  # Create a new branch and switch to it
          fi

      - name: Clean the Differ repo
        run: |
          cd differ
          # Remove everything except the .git folder and it's contents.
          for i in `ls | grep -v ".git"` ; do rm -rf $i; done;

      - name: Delete .git of new-version
        run: |
          rm -rf new-version/.git

      - name: Copy everything inside new-version to differ
        run: |
          cp -r new-version/* differ

      - name: Commit everything in differ
        id: commit-new
        run: |
          git config --global user.email "text@test.com"
          git config --global user.name "Github actions test"
          cd differ
          git add -A || true && git commit -m "Automatic commit" || true

      - name: Switch to old version repo
        run: |
          cd differ
          desired_branch="${{ env.OLD_VERSION_BRANCH }}"
          # Check if the branch exists on the remote repository
          if git ls-remote --heads origin "$desired_branch" | grep -q "$desired_branch"; then
            echo "The branch $desired_branch already exists on the remote repository."
            git fetch origin "$desired_branch"  # Fetch the branch from the remote
            git checkout "$desired_branch"     # Switch to the existing branch
          else
            echo "The branch $desired_branch does not exist on the remote repository."
            git checkout -b "$desired_branch"  # Create a new branch and switch to it
          fi

      - name: Clean the Differ repo
        run: |
          cd differ
          # Remove everything except the .git folder and it's contents.
          for i in `ls | grep -v ".git"` ; do rm -rf $i; done;

      - name: Delete .git of old-version
        run: |
          rm -rf old-version/.git

      - name: Copy everything inside new-version to differ
        run: |
          cp -r old-version/* differ

      - name: Commit everything in differ
        run: |
          git config --global user.email "text@test.com"
          git config --global user.name "Github actions test"
          cd differ
          git add -A || true && git commit -m "Automatic commit" || true


      - name: Check if the diff is non-empty
        id: check-is-diff-non-empty
        run: |
          cd differ
          if git diff --quiet ${{ env.OLD_VERSION_BRANCH }}..${{ env.NEW_VERSION_BRANCH }}; then
            result=0 # Diff is empty
          else
            result=1 # Diff is not empty
          fi
          echo "DIFF_IS_NON_EMPTY=$result" >> $GITHUB_OUTPUT
          
      - name: Push repos
        if: ${{ steps.check-is-diff-non-empty.outputs.DIFF_IS_NON_EMPTY == '1' }}
        id: push
        run: |
          cd differ
          git push --set-upstream origin ${{ env.OLD_VERSION_BRANCH }}
          echo "OLD_COMMIT_HASH=$(git rev-parse --short origin/${{ env.OLD_VERSION_BRANCH }})" >> $GITHUB_OUTPUT
          git checkout ${{ env.NEW_VERSION_BRANCH }}
          git push --set-upstream origin ${{ env.NEW_VERSION_BRANCH }}
          echo "NEW_COMMIT_HASH=$(git rev-parse --short origin/${{ env.NEW_VERSION_BRANCH }})" >> $GITHUB_OUTPUT

      - name: Write changes to common file
        if: ${{ steps.check-is-diff-non-empty.outputs.DIFF_IS_NON_EMPTY == '1' }}
        run: |
          mkdir outputs
          echo "https://github.com/${{ vars.DIFF_VIEW_USERNAME }}/${{ vars.DIFF_VIEW_REPO_NAME }}/compare/${{ steps.push.outputs.OLD_COMMIT_HASH }}..${{ steps.push.outputs.NEW_COMMIT_HASH }}" >> outputs/${{ matrix.type }}-${{ matrix.language }}.txt

      - uses: actions/upload-artifact@v3
        if: ${{ steps.check-is-diff-non-empty.outputs.DIFF_IS_NON_EMPTY == '1' }}
        with:
          name: outputs
          path: outputs/*.txt

  read-values:
    runs-on: ubuntu-latest
    needs: [comment-diffs]
    steps:
      - uses: actions/checkout@v3
      - name: Load outputs
        uses: actions/download-artifact@v3
        with:
          name: outputs
          path: outputs

      - run: |
          ls outputs
          cat outputs/*.txt

      # - name: Comment on PR
      #   if: output is not empty
      #   uses: actions/github-script@v3
      #   with:
      #     github-token: ${{secrets.GITHUB_TOKEN}}
      #     script: |
      #       const body = `This PR changes the output of \`create-react-native-library\`. You can find the diff of the change [here](https://github.com/${{ vars.DIFF_VIEW_USERNAME }}/${{ vars.DIFF_VIEW_REPO_NAME }}/compare/${{ steps.push.outputs.OLD_COMMIT_HASH }}..${{ steps.push.outputs.NEW_COMMIT_HASH }})`;
      #
      #       const comments = await github.issues.listComments({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #       });
      #       if (comments.data.some(comment => comment.body === body)) {
      #         return;
      #       }
      #       github.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body
      #       })
      #     

name: Comment diffs
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/comment-diffs.yml'
      - 'packages/create-react-native-library/**'
      - '!**.md'

jobs:
  comment-diffs:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v3

      # - name: Setup
      #   uses: ./.github/actions/setup
      #
      # - name: Build crnl
      #   run: |
      #     yarn workspace create-react-native-library prepare
      #
      # - name: Create library
      #   run: |
      #     ./packages/create-react-native-library/bin/create-react-native-library new-version \
      #       --slug @bob/react-native-test \
      #       --description test \
      #       --author-name test \
      #       --author-email test@test \
      #       --author-url https://test.test \
      #       --repo-url https://test.test \
      #       --type module-mixed \
      #       --languages java-objc \
      #       --no-example \
      #       --no-local
      #
      - name: Create new-version for now
        run: |
          mkdir new-version
          cd new-version
          echo "Hi mom!" > hey.txt
          # For good measure
          git init 

      - name: Create old-version for now
        run: |
          mkdir old-version
          cd old-version
          echo "Hi mom, I'm old!" > hey.txt
          # For good measure
          git init 

      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_DEPLOY_KEY }}

      - name: Create the Differ repo
        run: |
          echo ${{ vars.DIFF_VIEW_SSH }}
          mkdir differ
          cd differ
          git init
          git remote add origin ${{ vars.DIFF_VIEW_SSH }}
          desired_branch="new-version"
          # Check if the branch exists on the remote repository
          if git ls-remote --heads origin "$desired_branch" | grep -q "$desired_branch"; then
            echo "The branch $desired_branch already exists on the remote repository."
            git fetch origin "$desired_branch"  # Fetch the branch from the remote
            git checkout "$desired_branch"     # Switch to the existing branch
          else
            echo "The branch $desired_branch does not exist on the remote repository."
            git checkout -b "$desired_branch"  # Create a new branch and switch to it
          fi

      - name: Clean the Differ repo
        run: |
          cd differ
          # Remove everything except the .git folder and it's contents.
          for i in `ls | grep -v ".git"` ; do rm -rf $i; done;

      - name: Delete .git of new-version
        run: |
          rm -rf new-version/.git

      - name: Copy everything inside new-version to differ
        run: |
          cp new-version/* differ

      - name: Commit everything in differ
        id: commit-new
        run: |
          git config --global user.email "text@test.com"
          git config --global user.name "Github actions test"
          cd differ
          git add -A || true && git commit -m "Automatic commit" || true
          git push --set-upstream origin new-version
          echo "NEW_COMMIT_HASH=$(git rev-parse --short origin/new-version)" >> $GITHUB_OUTPUT

      - name: Switch to old version repo
        run: |
          cd differ
          desired_branch="old-version"
          # Check if the branch exists on the remote repository
          if git ls-remote --heads origin "$desired_branch" | grep -q "$desired_branch"; then
            echo "The branch $desired_branch already exists on the remote repository."
            git fetch origin "$desired_branch"  # Fetch the branch from the remote
            git checkout "$desired_branch"     # Switch to the existing branch
          else
            echo "The branch $desired_branch does not exist on the remote repository."
            git checkout -b "$desired_branch"  # Create a new branch and switch to it
          fi

      - name: Clean the Differ repo
        run: |
          cd differ
          # Remove everything except the .git folder and it's contents.
          for i in `ls | grep -v ".git"` ; do rm -rf $i; done;

      - name: Delete .git of old-version
        run: |
          rm -rf old-version/.git

      - name: Copy everything inside new-version to differ
        run: |
          cp old-version/* differ

      - name: Commit everything in differ
        id: commit-old
        run: |
          git config --global user.email "text@test.com"
          git config --global user.name "Github actions test"
          cd differ
          git add -A || true && git commit -m "Automatic commit" || true
          git push --set-upstream origin old-version
          echo "OLD_COMMIT_HASH=$(git rev-parse --short origin/old-version)" >> $GITHUB_OUTPUT

      - name: Print out the diff check url
        run: |
          echo "https://github.com/${{ vars.DIFF_VIEW_USERNAME }}/${{ vars.DIFF_VIEW_REPO_NAME }}/compare/${{ steps.commit-old.outputs.OLD_COMMIT_HASH }}..${{ steps.commit-new.outputs.NEW_COMMIT_HASH }}"

      # - name: Fetch main
      #   run: git fetch origin main
      #
      # - name: Checkout main
      #   run: git checkout origin/main
      #
      # # Removed this step for the sake of testing
      # # - name: Setup again # Add a check here to setup again if deps changed
      # #   uses: ./.github/actions/setup
      #
      # - name: Remove old build and build again
      #   run: |
      #     rm -rf ./packages/create-react-native-library/lib
      #     yarn workspace create-react-native-library prepare
      #
      # - name: Create library again
      #   run: |
      #     ./packages/create-react-native-library/bin/create-react-native-library old-version \
      #       --slug @bob/react-native-test \
      #       --description test \
      #       --author-name test \
      #       --author-email test@test \
      #       --author-url https://test.test \
      #       --repo-url https://test.test \
      #       --type module-mixed \
      #       --languages java-objc \
      #       --no-example \
      #       --no-local
